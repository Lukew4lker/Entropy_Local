;INTERRUPT MANAGER by Lucus

;Implements dynamic interrupt handling for kernel and processes, also implements communication through signals.

.define im_hardware_flag		0x1000	;Never set this to 0

:im_interrupt_handler
set push, ex
set push, b
sub a, im_hardware_flag
hwn b
sub b, 1
ifg a, b
set pc, .no_handler
set b, [im_table_address]
add b, a
ifn [b], 0
jsr [b]
:.no_handler	;fail silently
set b, pop
set ex, pop
rfi 0

:im_request_handler
add a, [im_table_address]
ifn [a], 0
set pc, .already_in_use
set [a], b
set a, 0		;success
set pc, pop
:.already_in_use
set a, err_already_in_use
set pc, pop

:im_free_handler
add a, [im_table_address]
set [a], 0
set pc, pop

:im_table_address	.dat 0x0000
